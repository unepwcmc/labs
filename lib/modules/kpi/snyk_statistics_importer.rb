module Kpi::SnykStatisticsImporter
  SNYK_CREDENTIALS = {
    'Authorization': "token #{Rails.application.secrets.snyk_token}"
  }.freeze

  SNYK_ENDPOINT = "https://snyk.io/api/v1/org/#{Rails.application.secrets.snyk_org_id}".freeze


  def self.vulnerabilities_per_project
    projects_with_no_issues = []
    missing_projects = []

    Project.find_each do |project|
      # TODO - Snyk API access requires plan upgrade
      # project_name = project.github_identifier.split('/').last
      # project_path = "/project/#{project_name}/aggregated-issues"
      # response = HTTParty.post(
      #   SNYK_ENDPOINT + project_path,
      #   headers: SNYK_CREDENTIALS
      # )
      # next if response.response.code == '404'
      # JSON.parse(response.body)

      ## Workaround - parsing the badge number generated by Snyk for each project (which is free)
      snyk_badge_url = "https://snyk.io/test/github/#{project.github_identifier}/badge.svg"
        
      svg = HTTParty.get(snyk_badge_url)
      
      if svg.response.code == '404'
        missing_projects << project.id
        next
      end

      parsed_svg = Nokogiri::HTML(svg)
      projects_with_no_issues << parsed_svg.text.match(/[0]/)
    end

    Rails.logger.info("#{missing_projects.length} projects were unaccounted for")
    (projects_with_no_issues.length.to_f / (Project.count - missing_projects.length)) * 100
  end
end